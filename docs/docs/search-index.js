var N=null,E="",T="t",U="u",searchIndex={};
var R=["Provides the image's height, width, and contains the…","jsvalue","canvasrenderingcontext2d","htmlcanvaselement","photonimage","imagedata","Get the ImageData from a 2D canvas context","dynamicimage","Draw a vertical barchart, with a specified title and data.","chart","Draw a vertical barchart, where the bars are filled with a…","open_image","Draw multiple borders stacked on each other, for added…","triangle","new_with_background","result","try_from","try_into","borrow_mut","value_into","approx_into","approx_from","value_from","return_abi","adapt_into_using","type_id","gdl::diagrams","borrow","typeid","gdl::elements","formatter","from_abi","ref_from_abi","describe","into_abi","is_none","ref_mut_from_abi","Triangle","PhotonImage","ColorScheme"];
searchIndex["bin"]={"doc":E,"i":[],"p":[]};
searchIndex["gdl"]={"doc":"GDL is a graphic design crate that allows developers to…","i":[[3,R[38],"gdl",R[0],N,N],[3,R[39],E,R[0],N,N],[3,"Font",E,R[0],N,N],[3,"Rgb",E,"Rgb color type.",N,N],[12,"r",E,E,0,N],[12,"g",E,E,0,N],[12,"b",E,E,0,N],[5,"draw_rect_web",E,E,N,[[[R[2]]]]],[5,"run",E,E,N,[[],[[R[15],[R[1]]],[R[1]]]]],[5,"put_image_data",E,"Place the ImageData onto the 2D context.",N,[[[R[3]],[R[2]],[R[4]]]]],[5,R[14],E,E,N,[[["rgb"],["u32"]],[R[7]]]],[5,R[11],E,"Convert the ImageData found in the canvas context to a…",N,[[[R[3]],[R[2]]],[R[4]]]],[5,"new_rgb",E,"Create a new RGB colour. TODO Will be using struct impl…",N,[[["u8"]],["rgb"]]],[5,"to_raw_pixels",E,"Convert ImageData to raw pixels.",N,[[[R[5]]],[["vec",["u8"]],["u8"]]]],[5,"to_image_data",E,"Convert a PhotonImage to JS-compatible ImageData",N,[[[R[4]]],[R[5]]]],[5,"get_image_data",E,R[6],N,[[[R[2]],[R[3]]],[R[5]]]],[0,"text",E,E,N,N],[5,"draw_text_with_border","gdl::text","Draw text onto an image with a border around the text.",N,[[["u32"],["str"],[R[7]]]]],[5,"draw_text",E,"Draw text onto an image.",N,[[["f32"],["u32"],["rgb"],["str"],[R[7]]]]],[5,"draw_vertical_text",E,"Draw vertical text onto an image.",N,[[["f32"],["u32"],["rgb"],["str"],[R[7]]]]],[5,"draw_vertical_text_single",E,"Draw single letters in a vertical column to create a…",N,[[["f32"],["u32"],["rgb"],["str"],[R[7]]]]],[5,"draw_upsidedown_text",E,"Draw upside-down text.",N,[[["f32"],["u32"],["rgb"],["str"],[R[7]]]]],[0,"background","gdl",E,N,N],[5,"circle_background","gdl::background","Create a background image containing circles. ",N,[[["u32"]],[R[7]]]],[5,"spaced_circle_background",E,"Create a background image containing spaced circles ",N,[[["u32"]],[R[7]]]],[5,"solid_background",E,"Create a background filled with a solid color of type…",N,[[["u32"],["rgb"]],[R[7]]]],[5,"lined_background",E,"Create a lined background. Returns a DynamicImage.",N,[[["u32"],["rgb"]],[R[7]]]],[5,"grid_background",E,"Create a grid background. Returns a DynamicImage.",N,[[["u32"],["rgb"]],[R[7]]]],[5,"pattern_from_img",E,"Create a patterned background by overlaying an image in a…",N,[[["u32"],["rgb"],[R[7]]],[R[7]]]],[5,"gradient_background",E,"Create a gradient background. /// Returns a DynamicImage.",N,[[["u32"]],[R[7]]]],[0,"diagrams","gdl",E,N,N],[3,"Chart",R[26],"Chart type, containing data, labels, and other metadata…",N,N],[12,"title",E,E,1,N],[12,"color",E,E,1,N],[12,"data",E,E,1,N],[12,"labels",E,E,1,N],[12,"height",E,E,1,N],[12,"width",E,E,1,N],[5,"draw_horizontal_barchart",E,"Draw a horizontal barchart, with a specified title and data.",N,[[[R[7]],[R[9]]]]],[5,"draw_vertical_barchart",E,R[8],N,[[[R[7]],[R[9]]]]],[5,"draw_horizontal_histogram",E,"Draw a histogram with a specified title, and data.",N,[[[R[7]],[R[9]]]]],[5,"draw_vertical_histogram",E,R[8],N,[[[R[7]],[R[9]]]]],[5,"draw_vertical_gradient_barchart",E,R[10],N,[[["str"],[R[7]],[R[9]]]]],[5,"draw_horizontal_gradient_barchart",E,R[10],N,[[["str"],[R[7]],[R[9]]]]],[5,"draw_vertical_image_barchart",E,"Draw a vertical barchart, where each bar is denoted by an…",N,[[[R[9]],[R[7]],[R[7]]]]],[5,"draw_horizontal_image_barchart",E,R[8],N,[[[R[9]],[R[7]],[R[7]]]]],[5,"draw_linechart",E,"Draw a linechart, with a specified title and data.",N,[[[R[7]],[R[9]]]]],[11,"new",E,"Create a new chart.",1,[[["vec",["u16"]],["string"],["vec",["string"]],["u16"],["u32"],["rgb"]],[R[9]]]],[0,"collage","gdl",E,N,N],[5,"two_grid","gdl::collage","Two grid collage. # Arguments * `img` - A mutable ref to a…",N,[[["u32"],[R[7]]],[R[7]]]],[5,"two_grid_text",E,"Four grid collage. # Arguments * `img` - A mutable ref to…",N,[[["u32"],[R[7]]],[R[7]]]],[5,"split_imgs_text",E,"Split-pane collage, with text on LHS and collage on RHS.",N,[[["u32"],[R[7]]],[R[7]]]],[5,"four_grid",E,"Four grid collage.",N,[[["u32"],[R[7]]],[R[7]]]],[5,"triple_grid",E,"Create a triple grid collage graphic.",N,[[["u32"],[R[7]]],[R[7]]]],[5,"four_grid_center_square",E,"Four-image collage with a centre square containing text.",N,[[["u32"],["str"],[R[7]]],[R[7]]]],[5,"moodboard",E,"Create a moodboard style graphic with 4 images within a…",N,[[["u32"],["str"],[R[7]]],[R[7]]]],[5,"feature_grid",E,"Three-image collage containing main text, and a…",N,[[["u32"],["str"],[R[7]]],[R[7]]]],[5,"triple_grid_text",E,"Triple-image collage with a centre square containing text.",N,[[["u32"],["str"],[R[7]]],[R[7]]]],[5,"six_grid_text",E,E,N,[[["u32"],["str"],[R[7]]],[R[7]]]],[0,"helpers","gdl",E,N,N],[5,"square_distance","gdl::helpers",E,N,[[["rgb"]],["i32"]]],[5,R[11],E,E,N,[[["str"]],[R[7]]]],[5,"open_dyn_image",E,E,N,[[["str"]],[R[7]]]],[5,"save_dyn_image",E,E,N,[[["str"],[R[7]]]]],[5,"save_image",E,E,N,[[["str"],[R[7]]]]],[5,"get_pixels",E,E,N,[[[R[7]]],[["vec",["u8"]],["u8"]]]],[5,"dyn_image_from_raw",E,E,N,[[[R[4]]],[R[7]]]],[5,"base64_to_image",E,E,N,[[["str"]],[["vec",["u8"]],["u8"]]]],[5,"dyn_to_photonimg",E,E,N,[[[R[7]]],[R[4]]]],[0,"graphics","gdl",E,N,N],[5,"create_image","gdl::graphics","Add text to an image.",N,[[["u32"],["rgb"]],[R[4]]]],[5,"draw_photonimage",E,"Draw a PhotonImage onto a container image.",N,[[["u32"],[R[4]],[R[4]]]]],[5,"draw_border",E,"Draw a border around a PhotonImage.",N,[[["rgb"],[R[4]],["u32"]]]],[0,"elements","gdl",E,N,N],[3,R[37],R[29],"Triangle struct, which represents the color and…",N,N],[12,"x1",E,E,2,N],[12,"y1",E,E,2,N],[12,"x2",E,E,2,N],[12,"y2",E,E,2,N],[12,"x3",E,E,2,N],[12,"y3",E,E,2,N],[5,"draw_solid_rect",E,"Draw a solid rectangle with a given background colour. ",N,[[["rgb"],["u32"],["i32"],[R[7]]]]],[5,"draw_opaque_rect",E,"Draw an opaque rectangle, where the opacity is set to a…",N,[[["rgb"],["u32"],["i32"],[R[7]],["u8"]]]],[5,"draw_triangle",E,"Draw a triangle.",N,[[[R[7]],[R[13]]]]],[5,"draw_equilateral_triangle",E,"Draw an equilateral triangle.",N,[[["rgb"],["u32"],["i32"],[R[7]]]]],[5,"draw_rect_text",E,"Draw a solid rectangle with text placed in-centre.",N,[[["rgb"],["u32"],["str"],["i32"],[R[7]]]]],[5,"draw_gradient_rect",E,"Draw a solid rectangle with a given background colour.…",N,[[["u32"],[R[7]]]]],[5,"draw_preset_rect_gradient",E,"Preset: Draw a gradient rectangle filled with a gradient.",N,[[["u32"],[R[7]],["str"]]]],[5,"draw_stacked_rect",E,"Draw two rectangles stacked on each other, for added depth.",N,[[["rgb"],["u32"],["i32"],[R[7]]]]],[5,"draw_stacked_borders",E,R[12],N,[[["rgb"],["u32"],["i32"],[R[7]]]]],[5,"draw_inline_border_rect",E,R[12],N,[[["rgb"],["u32"],["i32"],[R[7]]]]],[5,"create_gradient",E,"Create a gradient element in the shape of a Rect.",N,[[["u32"]],[R[7]]]],[5,"create_gradient_preset",E,"Apply a preset gradient by passing in a name. ",N,[[["u32"],["str"]],[R[7]]]],[11,"new",E,"Create a new Triangle, with specified co-ordinates for its…",2,[[["rgb"],["i32"]],[R[13]]]],[11,"background_color",E,"Get the background colour of the Triangle.",2,[[],["rgb"]]],[11,"x1",E,"Get the x1 co-ordinate of the Triangle.",2,[[],["i32"]]],[11,"x2",E,"Get the x1 value of the Triangle.",2,[[],["i32"]]],[11,"y1",E,"Get the y1 value of the Triangle.",2,[[],["i32"]]],[11,"y2",E,"Get the y2 value of the Triangle.",2,[[],["i32"]]],[0,"presets","gdl",E,N,N],[5,"centre_text","gdl::presets","Preset: Centre text, with background image.",N,[[[R[7]],["str"]]]],[5,"text_shades",E,"Preset: Repeat the same text on each line, with each line…",N,[[[R[7]],["str"]]]],[5,"repeat_text",E,"Preset: Repeat the same text on each line.",N,[[[R[7]],["str"]]]],[5,"text_banner",E,"Preset: text banner.",N,[[[R[7]],["str"]]]],[5,"vertical_text",E,"Preset: vertical text banner.",N,[[[R[7]],["str"]]]],[5,"rhs_text",E,"Preset: Right-hand side text.",N,[[[R[7]],["str"]]]],[5,"lhs_text",E,"Preset: Left-hand side text.",N,[[[R[7]],["str"]]]],[5,"vertical_text_rhs",E,"Preset: Right-hand side vertical text.",N,[[[R[7]],["str"]]]],[5,"quote",E,"Preset: Quote-style graphic, featuring prominence on the…",N,[[[R[7]],["str"]]]],[5,"postcard",E,"Preset: Postcard-style image, featuring main text…",N,[[["u32"],["str"],[R[7]]],[R[7]]]],[0,"resize","gdl",E,N,N],[5,"resize_socialmedia","gdl::resize","Resize an image for a particular format on social media.…",N,[[[R[4]],["str"]],[R[4]]]],[5,"resize_socialmedia_vec",E,"Resizes each image in a vec of PhotonImages to the desired…",N,[[["vec",[R[4]]],[R[4]],["str"]],[["vec",[R[4]]],[R[4]]]]],[5,"resize_socialmedia_all",E,"Resizes each image in a vec of PhotonImages to each of the…",N,[[[R[4]]],[["vec",[R[4]]],[R[4]]]]],[5,"resize",E,E,N,[[[R[4]],["u32"]],[R[4]]]],[11,"height","gdl",E,3,[[],["u32"]]],[11,"width",E,E,3,[[],["u32"]]],[11,"new_from_rawpixels",E,E,3,[[["u32"],["vec",["u8"]],["u8"]],[R[4]]]],[11,"new_from_imgdata",E,E,3,[[["self"],[R[5]],["u32"]],[R[4]]]],[11,R[14],E,E,3,[[["rgb"],["u32"]],[R[4]]]],[11,"new_with_gradient",E,E,3,[[["u32"]],[R[4]]]],[11,"new_socialmedia_graphic",E,"Create a new social media graphic. Available types…",3,[[["str"]],[R[4]]]],[11,"raw_pix",E,E,3,[[],[["vec",["u8"]],["u8"]]]],[11,"new",E,E,4,[[["rgb"]],["colorscheme"]]],[11,"create_swatch_image",E,"Create a swatch image in PNG format of the colour swatches…",4,[[]]],[11,"new",E,E,5,[[["u8"],["rgb"],["str"]],["font"]]],[11,"new",E,"Create a new Rgb color.",0,[[["self"],["u8"]],["rgb"]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[16],E,E,3,[[[U]],[R[15]]]],[11,R[17],E,E,3,[[],[R[15]]]],[11,R[18],E,E,3,[[["self"]],[T]]],[11,R[27],E,E,3,[[["self"]],[T]]],[11,R[25],E,E,3,[[["self"]],[R[28]]]],[11,R[19],E,E,3,[[],[R[15]]]],[11,R[20],E,E,3,[[],[R[15]]]],[11,R[21],E,E,3,[[["src"]],[R[15]]]],[11,R[22],E,E,3,[[["src"]],[R[15]]]],[11,R[16],E,E,3,[[["src"]],[R[15]]]],[11,R[17],E,E,3,[[],[R[15]]]],[11,R[23],E,E,3,[[["stack"]]]],[11,R[24],E,E,3,[[["m"]],["d"]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[16],E,E,4,[[[U]],[R[15]]]],[11,R[17],E,E,4,[[],[R[15]]]],[11,R[18],E,E,4,[[["self"]],[T]]],[11,R[27],E,E,4,[[["self"]],[T]]],[11,R[25],E,E,4,[[["self"]],[R[28]]]],[11,R[19],E,E,4,[[],[R[15]]]],[11,R[20],E,E,4,[[],[R[15]]]],[11,R[21],E,E,4,[[["src"]],[R[15]]]],[11,R[22],E,E,4,[[["src"]],[R[15]]]],[11,R[16],E,E,4,[[["src"]],[R[15]]]],[11,R[17],E,E,4,[[],[R[15]]]],[11,R[23],E,E,4,[[["stack"]]]],[11,R[24],E,E,4,[[["m"]],["d"]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[16],E,E,5,[[[U]],[R[15]]]],[11,R[17],E,E,5,[[],[R[15]]]],[11,R[18],E,E,5,[[["self"]],[T]]],[11,R[27],E,E,5,[[["self"]],[T]]],[11,R[25],E,E,5,[[["self"]],[R[28]]]],[11,R[19],E,E,5,[[],[R[15]]]],[11,R[20],E,E,5,[[],[R[15]]]],[11,R[21],E,E,5,[[["src"]],[R[15]]]],[11,R[22],E,E,5,[[["src"]],[R[15]]]],[11,R[16],E,E,5,[[["src"]],[R[15]]]],[11,R[17],E,E,5,[[],[R[15]]]],[11,R[23],E,E,5,[[["stack"]]]],[11,R[24],E,E,5,[[["m"]],["d"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[16],E,E,0,[[[U]],[R[15]]]],[11,R[17],E,E,0,[[],[R[15]]]],[11,R[18],E,E,0,[[["self"]],[T]]],[11,R[27],E,E,0,[[["self"]],[T]]],[11,R[25],E,E,0,[[["self"]],[R[28]]]],[11,R[19],E,E,0,[[],[R[15]]]],[11,R[20],E,E,0,[[],[R[15]]]],[11,R[21],E,E,0,[[["src"]],[R[15]]]],[11,R[22],E,E,0,[[["src"]],[R[15]]]],[11,R[16],E,E,0,[[["src"]],[R[15]]]],[11,R[17],E,E,0,[[],[R[15]]]],[11,R[23],E,E,0,[[["stack"]]]],[11,R[24],E,E,0,[[["m"]],["d"]]],[11,"from",R[26],E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[16],E,E,1,[[[U]],[R[15]]]],[11,R[17],E,E,1,[[],[R[15]]]],[11,R[18],E,E,1,[[["self"]],[T]]],[11,R[27],E,E,1,[[["self"]],[T]]],[11,R[25],E,E,1,[[["self"]],[R[28]]]],[11,R[19],E,E,1,[[],[R[15]]]],[11,R[20],E,E,1,[[],[R[15]]]],[11,R[21],E,E,1,[[["src"]],[R[15]]]],[11,R[22],E,E,1,[[["src"]],[R[15]]]],[11,R[16],E,E,1,[[["src"]],[R[15]]]],[11,R[17],E,E,1,[[],[R[15]]]],[11,R[24],E,E,1,[[["m"]],["d"]]],[11,"from",R[29],E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[16],E,E,2,[[[U]],[R[15]]]],[11,R[17],E,E,2,[[],[R[15]]]],[11,R[18],E,E,2,[[["self"]],[T]]],[11,R[27],E,E,2,[[["self"]],[T]]],[11,R[25],E,E,2,[[["self"]],[R[28]]]],[11,R[19],E,E,2,[[],[R[15]]]],[11,R[20],E,E,2,[[],[R[15]]]],[11,R[21],E,E,2,[[["src"]],[R[15]]]],[11,R[22],E,E,2,[[["src"]],[R[15]]]],[11,R[16],E,E,2,[[["src"]],[R[15]]]],[11,R[17],E,E,2,[[],[R[15]]]],[11,R[23],E,E,2,[[["stack"]]]],[11,R[24],E,E,2,[[["m"]],["d"]]],[11,"fmt","gdl",E,3,[[["self"],[R[30]]],[R[15]]]],[11,"fmt",E,E,4,[[["self"],[R[30]]],[R[15]]]],[11,"fmt",E,E,5,[[["self"],[R[30]]],[R[15]]]],[11,"fmt",E,E,0,[[["self"],[R[30]]],[R[15]]]],[11,"fmt",R[26],E,1,[[["self"],[R[30]]],[R[15]]]],[11,"fmt",R[29],E,2,[[["self"],[R[30]]],[R[15]]]],[11,R[31],"gdl",E,3,[[["stack"],["u32"]],["self"]]],[11,R[31],E,E,4,[[["stack"],["u32"]],["self"]]],[11,R[31],E,E,5,[[["stack"],["u32"]],["self"]]],[11,R[31],E,E,0,[[["stack"],["u32"]],["self"]]],[11,R[31],R[29],E,2,[[["stack"],["u32"]],["self"]]],[11,R[32],"gdl",E,3,[[["stack"]]]],[11,R[32],E,E,4,[[["stack"]]]],[11,R[32],E,E,5,[[["stack"]]]],[11,R[32],E,E,0,[[["stack"]]]],[11,R[32],R[29],E,2,[[["stack"]]]],[11,R[33],"gdl",E,3,[[]]],[11,R[33],E,E,4,[[]]],[11,R[33],E,E,5,[[]]],[11,R[33],E,E,0,[[]]],[11,R[33],R[29],E,2,[[]]],[11,R[34],"gdl",E,3,[[["stack"]],["u32"]]],[11,R[34],E,E,4,[[["stack"]],["u32"]]],[11,R[34],E,E,5,[[["stack"]],["u32"]]],[11,R[34],E,E,0,[[["stack"]],["u32"]]],[11,R[34],R[29],E,2,[[["stack"]],["u32"]]],[11,R[35],"gdl",E,3,[[],["bool"]]],[11,R[35],E,E,4,[[],["bool"]]],[11,R[35],E,E,5,[[],["bool"]]],[11,R[35],E,E,0,[[],["bool"]]],[11,R[35],R[29],E,2,[[],["bool"]]],[11,"none","gdl",E,3,[[]]],[11,"none",E,E,4,[[]]],[11,"none",E,E,5,[[]]],[11,"none",E,E,0,[[]]],[11,"none",R[29],E,2,[[]]],[11,R[36],"gdl",E,3,[[["stack"]]]],[11,R[36],E,E,4,[[["stack"]]]],[11,R[36],E,E,5,[[["stack"]]]],[11,R[36],E,E,0,[[["stack"]]]],[11,R[36],R[29],E,2,[[["stack"]]]]],"p":[[3,"Rgb"],[3,"Chart"],[3,R[37]],[3,R[38]],[3,R[39]],[3,"Font"]]};
initSearch(searchIndex);addSearchOptions(searchIndex);